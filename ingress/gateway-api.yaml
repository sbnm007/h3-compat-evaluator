# 1. GatewayClass for Envoy Gateway
#    (No changes needed here from previous config, keep as is)
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: eg-custom-gateway-class
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
# 2. Gateway for *.gateway-example.com
#    Crucial change: The hostname on the listener is now a wildcard.
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: custom-domain-gateway
  namespace: default
spec:
  gatewayClassName: eg-custom-gateway-class
  listeners:
    # Listener for the base domain: gateway-example.com
    - name: http-base
      port: 80
      protocol: HTTP
      hostname: "gateway-example.com" # Explicitly allow the base domain
      allowedRoutes:
        namespaces:
          from: All
    # Listener for all subdomains: *.gateway-example.com
    - name: http-wildcard
      port: 80
      protocol: HTTP
      hostname: "*.gateway-example.com" # Allow all subdomains
      allowedRoutes:
        namespaces:
          from: All
---
# 3. Demo Application (httpbin)
#    (No changes needed here, keep as is)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  labels:
    app: httpbin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
        - name: httpbin
          image: kennethreitz/httpbin
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
spec:
  selector:
    app: httpbin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# 4. HTTPRoute for gateway-example.com (original, for root domain)
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: custom-domain-httproute # Original route for the base domain
  namespace: default
spec:
  parentRefs:
    - name: custom-domain-gateway
  hostnames:
    - "gateway-example.com" # This route specifically handles the base domain
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /status
      backendRefs:
        - name: httpbin
          port: 80
    - matches:
        - path:
            type: PathPrefix
            value: /headers
      backendRefs:
        - name: httpbin
          port: 80
    - matches:
        - path:
            type: PathPrefix
            value: /ip
      backendRefs:
        - name: httpbin
          port: 80
    - matches:
        - path:
            type: Exact
            value: /
      backendRefs:
        - name: httpbin
          port: 80
---
# 5. NEW HTTPRoute for app1.gateway-example.com
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: app1-httproute
  namespace: default # Can be in the same or different namespace if allowed by Gateway
spec:
  parentRefs:
    - name: custom-domain-gateway
  hostnames:
    - "app1.gateway-example.com" # Specific subdomain for this route
  rules:
    - matches:
        - path:
            type: Exact
            value: / # Routes the root path of this subdomain
      backendRefs:
        - name: httpbin
          port: 80
          # We'll point to a specific httpbin endpoint to show it's different
          # For example, httpbin.org/get just echoes the request
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: httpbin
          port: 80
---
# 6. NEW HTTPRoute for app2.gateway-example.com
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: app2-httproute
  namespace: default # Can be in the same or different namespace
spec:
  parentRefs:
    - name: custom-domain-gateway
  hostnames:
    - "app2.gateway-example.com" # Specific subdomain for this route
  rules:
    - matches:
        - path:
            type: Exact
            value: / # Routes the root path of this subdomain
      backendRefs:
        - name: httpbin
          port: 80
          # We'll point to another specific httpbin endpoint
          # For example, httpbin.org/json returns JSON data
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: httpbin
          port: 80
