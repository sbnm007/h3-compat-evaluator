apiVersion: v1
kind: ConfigMap
metadata:
  name: angie-config
data:
  angie.conf: |
    worker_processes auto;
    events {}
    http {
      
      log_format with_proto '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'protocol=$server_protocol http3=$http3';

      access_log /dev/stdout with_proto;
      server {
        listen 443 quic reuseport;

        ssl_certificate     /certs/tls.crt;
        ssl_certificate_key /certs/tls.key;

        add_header Alt-Svc 'h3=":443"';  # Advertise HTTP/3
        add_header QUIC-Status "Using QUIC";

        location / {
          return 200 "Hello from Angie via HTTP/3!\n";
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angie
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angie
  template:
    metadata:
      labels:
        app: angie
    spec:
      containers:
        - name: angie
          image: docker.angie.software/angie:latest
          ports:
            - containerPort: 443
              protocol: TCP
            - containerPort: 443
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /etc/angie/angie.conf
              subPath: angie.conf
            - name: certs
              mountPath: /certs
      volumes:
        - name: config
          configMap:
            name: angie-config
        - name: certs
          secret:
            secretName: angie-cert

---
apiVersion: v1
kind: Service
metadata:
  name: angie-service
spec:
  type: LoadBalancer
  selector:
    app: angie
  ports:
    - name: quic
      port: 443
      targetPort: 443
      protocol: UDP

